name: CI/CD with Vulnerability Scanning

on:
  pull_request:
    branches:
      - main
    types:
      # PR更新時に実行
      - synchronize

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    # permissions:
    #   contents: read
    #   security-events: write
    #   actions: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build an image from Dockerfile
      run: |
        docker build -t trivy-test .

    - name: Install Trivy
      run: |
        wget https://github.com/aquasecurity/trivy/releases/download/v0.44.1/trivy_0.44.1_Linux-64bit.tar.gz
        tar zxvf trivy_0.44.1_Linux-64bit.tar.gz
        sudo mv trivy /usr/local/bin/

    # - name: Run Trivy vulnerability scanner
    #   uses: aquasecurity/trivy-action@master
    #   with:
    #     image-ref: 'trivy-test'
    #     format: 'sarif'
    #     output: 'trivy-results.sarif'
    #     ignore-unfixed: true
    #     vuln-type: 'os,library'
    #     severity: 'UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL'

    - name: Run Trivy vulnerability scanner
      run: |
        trivy image --format template --template "@contrib/sarif.tpl" -o trivy-results.sarif trivy-test

    # securityには GITHUB_TOKENではアクセスできない
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: 'trivy-results.sarif'
        # token: ${{ secrets.APP_SECRETS }}
        # token: ${{ secrets.GITHUB_TOKEN }}

    # ISSUEへの書き込み
    - name: Run Trivy vulnerability scanner and create GitHub Issue
      uses: lazy-actions/gitrivy@main
      with:
        image: 'trivy-test'
        # severity: 'HIGH,CRITICAL'
        vuln_type: 'os,library'
        token: ${{ secrets.GITHUB_TOKEN }}
